/**************************************************************************************
 http://code.google.com/a/apache-extras.org/p/camel-extra

 This program is free software; you can redistribute it and/or
 modify it under the terms of the GNU General Public License
 as published by the Free Software Foundation; either version 2
 of the License, or (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.


 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 02110-1301, USA.

 http://www.gnu.org/licenses/gpl-2.0-standalone.html
 ***************************************************************************************/
import spit;

extension org::openarchitectureware::xtext::registry::Modelloader reexport;

List[emf::EObject] allElements(emf::EObject x):
	x.allLocalElements()
			.union(x.allLocalElements().typeSelect(Import).collect(e|e.location().allLocalElements()))
		.flatten().toSet();
		
List[emf::EObject] allVisibleElements(emf::EObject x):
	x.allElements();

List[emf::EObject] allLocalElements(emf::EObject x):
	{x.eRootContainer}.union(x.eRootContainer.eAllContents);

String id(emf::EObject x) :
	let p = x.metaType.getProperty("name") :
		p==null?
			null :
			p.get(x);
			
List[emf::EObject] location(Import this) :
	location==null?{}:location.load().flatten();
